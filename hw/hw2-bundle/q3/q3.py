# -*- coding: utf-8 -*-
"""q3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WyYlpmGcwEHiYu3bN7DrvDr0x9Xko4po
"""

import numpy as np
import matplotlib.pyplot as plt

k = 20
LAMBDA = 0.1
lr = 0.02
MAX_ITERS = 40
training_file = 'ratings.train.txt'
openfile = open(training_file, 'r')

min_user_id = 1000000000
max_user_id = -1000000000
min_item_id = 1000000000
max_item_id = -1000000000

for line in openfile:
  user_id, item_id, rating = list(int(x) for x in line.strip().split("\t"))

  if user_id < min_user_id: min_user_id = user_id
  if user_id > max_user_id: max_user_id = user_id
  if item_id < min_item_id: min_item_id = item_id
  if item_id > max_item_id: max_item_id = item_id

Q = np.random.rand(max_item_id, k) * 0.5
P = np.random.rand(max_user_id, k) * 0.5

Iteration = []
E_list = []

for iter in range(MAX_ITERS):
  openfile.seek(0)
  for line in openfile:
    u, i, r = list(int(x) for x in line.strip().split("\t"))
    u -= 1
    i -= 1
    epsilon_iu = 2 * (r - Q[i] @ P[u].T)
    Q_i_new = Q[i] + lr * (epsilon_iu * P[u] - 2 * LAMBDA * Q[i])
    P_u_new = P[u] + lr * (epsilon_iu * Q[i] - 2 * LAMBDA * P[u])
    Q[i] = Q_i_new
    P[u] = P_u_new

  openfile.seek(0)
  E = 0
  for line in openfile:
    u, i, r = list(int(x) for x in line.strip().split("\t"))
    u -= 1
    i -= 1
    E += (r - Q[i] @ P[u].T) ** 2
  E += LAMBDA * (np.sum(P ** 2) + np.sum(Q ** 2))
  E_list.append(E)
  Iteration.append(iter + 1)
  print("Iteration {}, error E is: {}".format(iter + 1, E))

plt.figure()
plt.plot(Iteration, E_list)
plt.xlabel('Iteration')
plt.ylabel('Error')
plt.title('Stochastic Gradient Descent: Error vs. Iterations')
plt.savefig('q3.png')
plt.show()

